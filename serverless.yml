service: cognito-authentication

frameworkVersion: "3"

package:
  individually: false

plugins:
  - serverless-bundle

custom:
  stage: ${opt:stage, self:provider.stage}
  poolName: ${self:custom.stage}-user-pool

provider:
  name: aws
  stage: prod
  region: ${opt:region, 'ap-south-1'}
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - iam:GetRole
        - sns:*
        - sqs:*
      Resource: arn:aws:iam::809526267565:role/cognito-authentication-prod-ap-south-1-lambdaRole


functions:
  Create_auth_challenge_Lambda_trigger:
    handler: functions/create-auth-challenge-lambda.main
    runtime: nodejs20.x
    events:
      - cognitoUserPool:
          pool: MyUserPool
          trigger: CreateAuthChallenge

  Define_auth_challenge_Lambda_trigger:
    handler: functions/define-auth-challenge-lambda.main
    runtime: nodejs20.x
    events:
      - cognitoUserPool:
          pool: MyUserPool
          trigger: DefineAuthChallenge

  Post_confirmation_Lambda_trigger:
    handler: functions/post-confirmation-lambda.main
    runtime: nodejs20.x
    events:
      - cognitoUserPool:
          pool: MyUserPool
          trigger: PostConfirmation

  Verify_auth_challenge_response_Lambda_trigger:
    handler: functions/verify-auth-challenge-lambda.main
    runtime: nodejs20.x
    events:
      - cognitoUserPool:
          pool: MyUserPool
          trigger: VerifyAuthChallengeResponse

  Pre_sign_up_Lambda_trigger:
    handler: functions/pre-sign-up-lambda.main
    runtime: python3.11
    events:
      - cognitoUserPool:
          pool: MyUserPool
          trigger: PreSignUp

resources:
  Resources:
    CognitoUserPoolMyUserPool:
      Type: "AWS::Cognito::UserPool"
      Properties:
        # Generate a name based on the stage
        UserPoolName: ${self:custom.poolName}
        # Set phone_number as an alias
        UsernameAttributes:
          - phone_number
        Policies:
          PasswordPolicy:
            MinimumLength: 6
            RequireLowercase: False
            RequireNumbers: False
            RequireSymbols: False
            RequireUppercase: False

    CognitoUserPoolClient:
      Type: "AWS::Cognito::UserPoolClient"
      Properties:
        # Generate an app client name based on the stage
        ClientName: ${self:custom.stage}-sms-auth-client
        UserPoolId:
          Ref: CognitoUserPoolMyUserPool
        ExplicitAuthFlows:
          - CUSTOM_AUTH_FLOW_ONLY
        GenerateSecret: false